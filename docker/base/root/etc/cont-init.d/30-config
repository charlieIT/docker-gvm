#!/usr/bin/with-contenv bash

# NOTE - based on https://github.com/linuxserver/docker-webgrabplus/blob/master/root/etc/cont-init.d/30-config
# The default cron schedule can be edited by mounting /config as a volume and tweaking the default file

# add cron file for running feed updates
[[ ! -e /config/update-cron ]] && \
	cp /defaults/update-cron /config/update-cron
crontab -u abc /config/update-cron

# ospd.conf
[[ ! -e /config/ospd.conf ]] && \
	cp /defaults/ospd.conf /config/ospd.conf

## set password for abc to unlock it and set sudo access
#sed -i "/${USER_NAME} ALL.*/d" /etc/sudoers
#if [ "$SUDO_ACCESS" == "true" ]; then
#    if [ -n "$USER_PASSWORD" ] || [ -n "$USER_PASSWORD_FILE" -a -f "$USER_PASSWORD_FILE" ]; then
#        echo "${USER_NAME} ALL=(ALL) ALL" >> /etc/sudoers
#        echo "Sudo is enabled with password."
#    else
#        echo "${USER_NAME} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
#        echo "Sudo is enabled without password."
#    fi
#else
#    echo "Sudo is disabled."
#fi
#[[ -n "$USER_PASSWORD_FILE" ]] && [[ -f "$USER_PASSWORD_FILE" ]] && \
#    USER_PASSWORD=$(cat "$USER_PASSWORD_FILE") && \
#    echo "User password is retrieved from file."
#USER_PASSWORD=${USER_PASSWORD:-$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-8};echo;)}
#echo "${USER_NAME}:${USER_PASSWORD}" | chpasswd

if [ -n "${SUDO_PASSWORD}" ]; then
  echo "setting up sudo access"
  if ! grep -q 'abc' /etc/sudoers; then
    echo "adding abc to sudoers"
    echo "abc ALL=(ALL:ALL) ALL" >> /etc/sudoers
  fi
  echo "setting sudo password"
  echo -e "${SUDO_PASSWORD}\n${SUDO_PASSWORD}" | passwd abc
fi


# generate certificates
gvm-manage-certs -a

chown -R abc:abc \
	/config \
	/defaults \
	/usr/local/var/run \
	/usr/local/var/log \
	/usr/local/var/lib/gvm/gvmd \
	/usr/local/var/lib/gvm/private \
	/usr/local/var/lib/gvm/CA

chown abc:abc \
	/usr/local/var/lib/openvas/plugins \
	/usr/local/var/lib/gvm/cert-data \
	/usr/local/var/lib/gvm/scap-data
